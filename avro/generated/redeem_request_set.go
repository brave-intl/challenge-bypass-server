// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCES:
 *     redeem_request.avsc
 *     redeem_result.avsc
 *     signing_request.avsc
 *     signing_result.avsc
 */
package generated

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

// Top level request containing the data to be processed, as well as any top level metadata for this message.
type RedeemRequestSet struct {
	Request_id string `json:"request_id"`

	Data []RedeemRequest `json:"data"`
}

const RedeemRequestSetAvroCRC64Fingerprint = "\xf5_\xa2\x11S\xd5`\xdd"

func NewRedeemRequestSet() RedeemRequestSet {
	r := RedeemRequestSet{}
	r.Data = make([]RedeemRequest, 0)

	return r
}

func DeserializeRedeemRequestSet(r io.Reader) (RedeemRequestSet, error) {
	t := NewRedeemRequestSet()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeRedeemRequestSetFromSchema(r io.Reader, schema string) (RedeemRequestSet, error) {
	t := NewRedeemRequestSet()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeRedeemRequestSet(r RedeemRequestSet, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Request_id, w)
	if err != nil {
		return err
	}
	err = writeArrayRedeemRequest(r.Data, w)
	if err != nil {
		return err
	}
	return err
}

func (r RedeemRequestSet) Serialize(w io.Writer) error {
	return writeRedeemRequestSet(r, w)
}

func (r RedeemRequestSet) Schema() string {
	return "{\"doc\":\"Top level request containing the data to be processed, as well as any top level metadata for this message.\",\"fields\":[{\"name\":\"request_id\",\"type\":\"string\"},{\"name\":\"data\",\"type\":{\"items\":{\"fields\":[{\"doc\":\"contains METADATA\",\"name\":\"associated_data\",\"type\":\"bytes\"},{\"name\":\"public_key\",\"type\":\"string\"},{\"name\":\"token_preimage\",\"type\":\"string\"},{\"name\":\"binding\",\"type\":\"string\"},{\"name\":\"signature\",\"type\":\"string\"}],\"name\":\"RedeemRequest\",\"namespace\":\"brave.cbp\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"brave.cbp.RedeemRequestSet\",\"type\":\"record\"}"
}

func (r RedeemRequestSet) SchemaName() string {
	return "brave.cbp.RedeemRequestSet"
}

func (_ RedeemRequestSet) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ RedeemRequestSet) SetInt(v int32)       { panic("Unsupported operation") }
func (_ RedeemRequestSet) SetLong(v int64)      { panic("Unsupported operation") }
func (_ RedeemRequestSet) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ RedeemRequestSet) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ RedeemRequestSet) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ RedeemRequestSet) SetString(v string)   { panic("Unsupported operation") }
func (_ RedeemRequestSet) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *RedeemRequestSet) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Request_id}

		return w

	case 1:
		r.Data = make([]RedeemRequest, 0)

		w := ArrayRedeemRequestWrapper{Target: &r.Data}

		return w

	}
	panic("Unknown field index")
}

func (r *RedeemRequestSet) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *RedeemRequestSet) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ RedeemRequestSet) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ RedeemRequestSet) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ RedeemRequestSet) HintSize(int)                     { panic("Unsupported operation") }
func (_ RedeemRequestSet) Finalize()                        {}

func (_ RedeemRequestSet) AvroCRC64Fingerprint() []byte {
	return []byte(RedeemRequestSetAvroCRC64Fingerprint)
}

func (r RedeemRequestSet) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["request_id"], err = json.Marshal(r.Request_id)
	if err != nil {
		return nil, err
	}
	output["data"], err = json.Marshal(r.Data)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *RedeemRequestSet) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["request_id"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Request_id); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for request_id")
	}
	val = func() json.RawMessage {
		if v, ok := fields["data"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Data); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for data")
	}
	return nil
}
